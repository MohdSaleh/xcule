import { Express } from 'express';
import { Application as FeathersApplication } from '@feathersjs/feathers';
import cors from 'cors';
import compression from 'compression';
import { rest, RestOptions, formatter } from './rest';
import { errorHandler, notFound, ErrorHandlerOptions } from './handlers';
import { Application, ExpressOverrides } from './declarations';
import { AuthenticationSettings, authenticate, parseAuthentication } from './authentication';
import { default as original, static as serveStatic, json, raw, text, urlencoded, query } from 'express';
export { original, serveStatic, serveStatic as static, json, raw, text, urlencoded, query, rest, RestOptions, formatter, errorHandler, notFound, Application, ErrorHandlerOptions, ExpressOverrides, AuthenticationSettings, parseAuthentication, authenticate, cors, compression };
export default function feathersExpress<S = any, C = any>(feathersApp?: FeathersApplication<S, C>, expressApp?: Express): Application<S, C>;
